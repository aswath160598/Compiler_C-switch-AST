Terminals unused in grammar

   DEFINE


Grammar

    0 $accept: translation_unit $end

    1 headers: HASH INCLUDE HEADER_LITERAL
    2        | HASH INCLUDE '<' libraries '>'

    3 libraries: STDIO
    4          | STDLIB
    5          | MATH
    6          | STRING
    7          | TIME

    8 primary_expression: IDENTIFIER
    9                   | INTEGER_LITERAL
   10                   | FLOAT_LITERAL
   11                   | STRING_LITERAL
   12                   | '(' expression ')'

   13 postfix_expression: primary_expression
   14                   | postfix_expression '(' ')'
   15                   | postfix_expression '.' IDENTIFIER
   16                   | postfix_expression INC_OP
   17                   | postfix_expression DEC_OP
   18                   | INC_OP primary_expression
   19                   | DEC_OP primary_expression

   20 unary_expression: postfix_expression
   21                 | '+' unary_expression
   22                 | '-' unary_expression

   23 multiplicative_expression: unary_expression
   24                          | multiplicative_expression '*' unary_expression
   25                          | multiplicative_expression '/' unary_expression
   26                          | multiplicative_expression '%' unary_expression

   27 additive_expression: multiplicative_expression
   28                    | additive_expression '+' multiplicative_expression
   29                    | additive_expression '-' multiplicative_expression

   30 relational_expression: additive_expression
   31                      | relational_expression '<' additive_expression
   32                      | relational_expression '>' additive_expression
   33                      | relational_expression LE_OP additive_expression
   34                      | relational_expression GE_OP additive_expression

   35 equality_expression: relational_expression
   36                    | equality_expression EQ_OP relational_expression
   37                    | equality_expression NE_OP relational_expression

   38 conditional_expression: equality_expression
   39                       | equality_expression '?' expression ':' conditional_expression

   40 assignment_expression: conditional_expression
   41                      | unary_expression '=' assignment_expression
   42                      | unary_expression ADD_ASSIGN assignment_expression
   43                      | unary_expression SUB_ASSIGN assignment_expression

   44 expression: assignment_expression
   45           | expression ',' assignment_expression

   46 constant_expression: conditional_expression

   47 declaration: type_specifier init_declarator_list ';'

   48 init_declarator_list: init_declarator
   49                     | init_declarator_list ',' init_declarator

   50 init_declarator: IDENTIFIER '=' assignment_expression
   51                | IDENTIFIER

   52 type_specifier: VOID
   53               | CHAR
   54               | INT
   55               | FLOAT

   56 statement: compound_statement
   57          | expression_statement
   58          | iteration_statement
   59          | selection_statement

   60 compound_statement: '{' block_item_list '}'

   61 block_item_list: block_item
   62                | block_item_list block_item

   63 block_item: declaration
   64           | statement

   65 expression_statement: expression ';'

   66 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement
   67                    | FOR '(' declaration expression_statement expression ')' statement

   68 selection_statement: SWITCH '(' expression ')' '{' case_statement_list '}'

   69 case_statement_list: case_statement
   70                    | case_statement break_statement case_statement_list
   71                    | case_statement case_statement_list
   72                    | default_line
   73                    | break_statement

   74 case_statement: CASE constant_expression ':' block_item_list
   75               | CASE constant_expression ':' break_statement

   76 break_statement: BREAK ';'

   77 default_line: DEFAULT ':' block_item_list

   78 translation_unit: external_declaration
   79                 | translation_unit external_declaration

   80 external_declaration: INT MAIN '(' ')' compound_statement
   81                     | declaration
   82                     | headers


Terminals, with rules where they appear

$end (0) 0
'%' (37) 26
'(' (40) 12 14 66 67 68 80
')' (41) 12 14 66 67 68 80
'*' (42) 24
'+' (43) 21 28
',' (44) 45 49
'-' (45) 22 29
'.' (46) 15
'/' (47) 25
':' (58) 39 74 75 77
';' (59) 47 65 76
'<' (60) 2 31
'=' (61) 41 50
'>' (62) 2 32
'?' (63) 39
'{' (123) 60 68
'}' (125) 60 68
error (256)
HASH (258) 1 2
INCLUDE (259) 1 2
DEFINE (260)
STDIO (261) 3
STDLIB (262) 4
MATH (263) 5
STRING (264) 6
TIME (265) 7
IDENTIFIER (266) 8 15 50 51
INTEGER_LITERAL (267) 9
FLOAT_LITERAL (268) 10
STRING_LITERAL (269) 11
HEADER_LITERAL (270) 1
INC_OP (271) 16 18
DEC_OP (272) 17 19
LE_OP (273) 33
GE_OP (274) 34
EQ_OP (275) 36
NE_OP (276) 37
ADD_ASSIGN (277) 42
SUB_ASSIGN (278) 43
CHAR (279) 53
INT (280) 54 80
FLOAT (281) 55
VOID (282) 52
MAIN (283) 80
FOR (284) 66 67
SWITCH (285) 68
DEFAULT (286) 77
BREAK (287) 76
CASE (288) 74 75


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
headers (52)
    on left: 1 2, on right: 82
libraries (53)
    on left: 3 4 5 6 7, on right: 2
primary_expression (54)
    on left: 8 9 10 11 12, on right: 13 18 19
postfix_expression (55)
    on left: 13 14 15 16 17 18 19, on right: 14 15 16 17 20
unary_expression (56)
    on left: 20 21 22, on right: 21 22 23 24 25 26 41 42 43
multiplicative_expression (57)
    on left: 23 24 25 26, on right: 24 25 26 27 28 29
additive_expression (58)
    on left: 27 28 29, on right: 28 29 30 31 32 33 34
relational_expression (59)
    on left: 30 31 32 33 34, on right: 31 32 33 34 35 36 37
equality_expression (60)
    on left: 35 36 37, on right: 36 37 38 39
conditional_expression (61)
    on left: 38 39, on right: 39 40 46
assignment_expression (62)
    on left: 40 41 42 43, on right: 41 42 43 44 45 50
expression (63)
    on left: 44 45, on right: 12 39 45 65 66 67 68
constant_expression (64)
    on left: 46, on right: 74 75
declaration (65)
    on left: 47, on right: 63 67 81
init_declarator_list (66)
    on left: 48 49, on right: 47 49
init_declarator (67)
    on left: 50 51, on right: 48 49
type_specifier (68)
    on left: 52 53 54 55, on right: 47
statement (69)
    on left: 56 57 58 59, on right: 64 66 67
compound_statement (70)
    on left: 60, on right: 56 80
block_item_list (71)
    on left: 61 62, on right: 60 62 74 77
block_item (72)
    on left: 63 64, on right: 61 62
expression_statement (73)
    on left: 65, on right: 57 66 67
iteration_statement (74)
    on left: 66 67, on right: 58
selection_statement (75)
    on left: 68, on right: 59
case_statement_list (76)
    on left: 69 70 71 72 73, on right: 68 70 71
case_statement (77)
    on left: 74 75, on right: 69 70 71
break_statement (78)
    on left: 76, on right: 70 73 75
default_line (79)
    on left: 77, on right: 72
translation_unit (80)
    on left: 78 79, on right: 0 79
external_declaration (81)
    on left: 80 81 82, on right: 78 79


State 0

    0 $accept: . translation_unit $end

    HASH   shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    VOID   shift, and go to state 5

    headers               go to state 6
    declaration           go to state 7
    type_specifier        go to state 8
    translation_unit      go to state 9
    external_declaration  go to state 10


State 1

    1 headers: HASH . INCLUDE HEADER_LITERAL
    2        | HASH . INCLUDE '<' libraries '>'

    INCLUDE  shift, and go to state 11


State 2

   53 type_specifier: CHAR .

    $default  reduce using rule 53 (type_specifier)


State 3

   54 type_specifier: INT .
   80 external_declaration: INT . MAIN '(' ')' compound_statement

    MAIN  shift, and go to state 12

    $default  reduce using rule 54 (type_specifier)


State 4

   55 type_specifier: FLOAT .

    $default  reduce using rule 55 (type_specifier)


State 5

   52 type_specifier: VOID .

    $default  reduce using rule 52 (type_specifier)


State 6

   82 external_declaration: headers .

    $default  reduce using rule 82 (external_declaration)


State 7

   81 external_declaration: declaration .

    $default  reduce using rule 81 (external_declaration)


State 8

   47 declaration: type_specifier . init_declarator_list ';'

    IDENTIFIER  shift, and go to state 13

    init_declarator_list  go to state 14
    init_declarator       go to state 15


State 9

    0 $accept: translation_unit . $end
   79 translation_unit: translation_unit . external_declaration

    $end   shift, and go to state 16
    HASH   shift, and go to state 1
    CHAR   shift, and go to state 2
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    VOID   shift, and go to state 5

    headers               go to state 6
    declaration           go to state 7
    type_specifier        go to state 8
    external_declaration  go to state 17


State 10

   78 translation_unit: external_declaration .

    $default  reduce using rule 78 (translation_unit)


State 11

    1 headers: HASH INCLUDE . HEADER_LITERAL
    2        | HASH INCLUDE . '<' libraries '>'

    HEADER_LITERAL  shift, and go to state 18
    '<'             shift, and go to state 19


State 12

   80 external_declaration: INT MAIN . '(' ')' compound_statement

    '('  shift, and go to state 20


State 13

   50 init_declarator: IDENTIFIER . '=' assignment_expression
   51                | IDENTIFIER .

    '='  shift, and go to state 21

    $default  reduce using rule 51 (init_declarator)


State 14

   47 declaration: type_specifier init_declarator_list . ';'
   49 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 22
    ';'  shift, and go to state 23


State 15

   48 init_declarator_list: init_declarator .

    $default  reduce using rule 48 (init_declarator_list)


State 16

    0 $accept: translation_unit $end .

    $default  accept


State 17

   79 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 79 (translation_unit)


State 18

    1 headers: HASH INCLUDE HEADER_LITERAL .

    $default  reduce using rule 1 (headers)


State 19

    2 headers: HASH INCLUDE '<' . libraries '>'

    STDIO   shift, and go to state 24
    STDLIB  shift, and go to state 25
    MATH    shift, and go to state 26
    STRING  shift, and go to state 27
    TIME    shift, and go to state 28

    libraries  go to state 29


State 20

   80 external_declaration: INT MAIN '(' . ')' compound_statement

    ')'  shift, and go to state 30


State 21

   50 init_declarator: IDENTIFIER '=' . assignment_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 48


State 22

   49 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 13

    init_declarator  go to state 49


State 23

   47 declaration: type_specifier init_declarator_list ';' .

    $default  reduce using rule 47 (declaration)


State 24

    3 libraries: STDIO .

    $default  reduce using rule 3 (libraries)


State 25

    4 libraries: STDLIB .

    $default  reduce using rule 4 (libraries)


State 26

    5 libraries: MATH .

    $default  reduce using rule 5 (libraries)


State 27

    6 libraries: STRING .

    $default  reduce using rule 6 (libraries)


State 28

    7 libraries: TIME .

    $default  reduce using rule 7 (libraries)


State 29

    2 headers: HASH INCLUDE '<' libraries . '>'

    '>'  shift, and go to state 50


State 30

   80 external_declaration: INT MAIN '(' ')' . compound_statement

    '{'  shift, and go to state 51

    compound_statement  go to state 52


State 31

    8 primary_expression: IDENTIFIER .

    $default  reduce using rule 8 (primary_expression)


State 32

    9 primary_expression: INTEGER_LITERAL .

    $default  reduce using rule 9 (primary_expression)


State 33

   10 primary_expression: FLOAT_LITERAL .

    $default  reduce using rule 10 (primary_expression)


State 34

   11 primary_expression: STRING_LITERAL .

    $default  reduce using rule 11 (primary_expression)


State 35

   18 postfix_expression: INC_OP . primary_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    '('              shift, and go to state 37

    primary_expression  go to state 53


State 36

   19 postfix_expression: DEC_OP . primary_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    '('              shift, and go to state 37

    primary_expression  go to state 54


State 37

   12 primary_expression: '(' . expression ')'

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 56


State 38

   21 unary_expression: '+' . unary_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression  go to state 40
    postfix_expression  go to state 41
    unary_expression    go to state 57


State 39

   22 unary_expression: '-' . unary_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression  go to state 40
    postfix_expression  go to state 41
    unary_expression    go to state 58


State 40

   13 postfix_expression: primary_expression .

    $default  reduce using rule 13 (postfix_expression)


State 41

   14 postfix_expression: postfix_expression . '(' ')'
   15                   | postfix_expression . '.' IDENTIFIER
   16                   | postfix_expression . INC_OP
   17                   | postfix_expression . DEC_OP
   20 unary_expression: postfix_expression .

    INC_OP  shift, and go to state 59
    DEC_OP  shift, and go to state 60
    '('     shift, and go to state 61
    '.'     shift, and go to state 62

    $default  reduce using rule 20 (unary_expression)


State 42

   23 multiplicative_expression: unary_expression .
   41 assignment_expression: unary_expression . '=' assignment_expression
   42                      | unary_expression . ADD_ASSIGN assignment_expression
   43                      | unary_expression . SUB_ASSIGN assignment_expression

    ADD_ASSIGN  shift, and go to state 63
    SUB_ASSIGN  shift, and go to state 64
    '='         shift, and go to state 65

    $default  reduce using rule 23 (multiplicative_expression)


State 43

   24 multiplicative_expression: multiplicative_expression . '*' unary_expression
   25                          | multiplicative_expression . '/' unary_expression
   26                          | multiplicative_expression . '%' unary_expression
   27 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 27 (additive_expression)


State 44

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   30 relational_expression: additive_expression .

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70

    $default  reduce using rule 30 (relational_expression)


State 45

   31 relational_expression: relational_expression . '<' additive_expression
   32                      | relational_expression . '>' additive_expression
   33                      | relational_expression . LE_OP additive_expression
   34                      | relational_expression . GE_OP additive_expression
   35 equality_expression: relational_expression .

    LE_OP  shift, and go to state 71
    GE_OP  shift, and go to state 72
    '<'    shift, and go to state 73
    '>'    shift, and go to state 74

    $default  reduce using rule 35 (equality_expression)


State 46

   36 equality_expression: equality_expression . EQ_OP relational_expression
   37                    | equality_expression . NE_OP relational_expression
   38 conditional_expression: equality_expression .
   39                       | equality_expression . '?' expression ':' conditional_expression

    EQ_OP  shift, and go to state 75
    NE_OP  shift, and go to state 76
    '?'    shift, and go to state 77

    $default  reduce using rule 38 (conditional_expression)


State 47

   40 assignment_expression: conditional_expression .

    $default  reduce using rule 40 (assignment_expression)


State 48

   50 init_declarator: IDENTIFIER '=' assignment_expression .

    $default  reduce using rule 50 (init_declarator)


State 49

   49 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 49 (init_declarator_list)


State 50

    2 headers: HASH INCLUDE '<' libraries '>' .

    $default  reduce using rule 2 (headers)


State 51

   60 compound_statement: '{' . block_item_list '}'

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    CHAR             shift, and go to state 2
    INT              shift, and go to state 78
    FLOAT            shift, and go to state 4
    VOID             shift, and go to state 5
    FOR              shift, and go to state 79
    SWITCH           shift, and go to state 80
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39
    '{'              shift, and go to state 51

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 81
    declaration                go to state 82
    type_specifier             go to state 8
    statement                  go to state 83
    compound_statement         go to state 84
    block_item_list            go to state 85
    block_item                 go to state 86
    expression_statement       go to state 87
    iteration_statement        go to state 88
    selection_statement        go to state 89


State 52

   80 external_declaration: INT MAIN '(' ')' compound_statement .

    $default  reduce using rule 80 (external_declaration)


State 53

   18 postfix_expression: INC_OP primary_expression .

    $default  reduce using rule 18 (postfix_expression)


State 54

   19 postfix_expression: DEC_OP primary_expression .

    $default  reduce using rule 19 (postfix_expression)


State 55

   44 expression: assignment_expression .

    $default  reduce using rule 44 (expression)


State 56

   12 primary_expression: '(' expression . ')'
   45 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 90
    ','  shift, and go to state 91


State 57

   21 unary_expression: '+' unary_expression .

    $default  reduce using rule 21 (unary_expression)


State 58

   22 unary_expression: '-' unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 59

   16 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 16 (postfix_expression)


State 60

   17 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 17 (postfix_expression)


State 61

   14 postfix_expression: postfix_expression '(' . ')'

    ')'  shift, and go to state 92


State 62

   15 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 93


State 63

   42 assignment_expression: unary_expression ADD_ASSIGN . assignment_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 94


State 64

   43 assignment_expression: unary_expression SUB_ASSIGN . assignment_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 95


State 65

   41 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 96


State 66

   24 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression  go to state 40
    postfix_expression  go to state 41
    unary_expression    go to state 97


State 67

   25 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression  go to state 40
    postfix_expression  go to state 41
    unary_expression    go to state 98


State 68

   26 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression  go to state 40
    postfix_expression  go to state 41
    unary_expression    go to state 99


State 69

   28 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 100
    multiplicative_expression  go to state 101


State 70

   29 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 100
    multiplicative_expression  go to state 102


State 71

   33 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 100
    multiplicative_expression  go to state 43
    additive_expression        go to state 103


State 72

   34 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 100
    multiplicative_expression  go to state 43
    additive_expression        go to state 104


State 73

   31 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 100
    multiplicative_expression  go to state 43
    additive_expression        go to state 105


State 74

   32 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 100
    multiplicative_expression  go to state 43
    additive_expression        go to state 106


State 75

   36 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 100
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 107


State 76

   37 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 100
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 108


State 77

   39 conditional_expression: equality_expression '?' . expression ':' conditional_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 109


State 78

   54 type_specifier: INT .

    $default  reduce using rule 54 (type_specifier)


State 79

   66 iteration_statement: FOR . '(' expression_statement expression_statement expression ')' statement
   67                    | FOR . '(' declaration expression_statement expression ')' statement

    '('  shift, and go to state 110


State 80

   68 selection_statement: SWITCH . '(' expression ')' '{' case_statement_list '}'

    '('  shift, and go to state 111


State 81

   45 expression: expression . ',' assignment_expression
   65 expression_statement: expression . ';'

    ','  shift, and go to state 91
    ';'  shift, and go to state 112


State 82

   63 block_item: declaration .

    $default  reduce using rule 63 (block_item)


State 83

   64 block_item: statement .

    $default  reduce using rule 64 (block_item)


State 84

   56 statement: compound_statement .

    $default  reduce using rule 56 (statement)


State 85

   60 compound_statement: '{' block_item_list . '}'
   62 block_item_list: block_item_list . block_item

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    CHAR             shift, and go to state 2
    INT              shift, and go to state 78
    FLOAT            shift, and go to state 4
    VOID             shift, and go to state 5
    FOR              shift, and go to state 79
    SWITCH           shift, and go to state 80
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39
    '{'              shift, and go to state 51
    '}'              shift, and go to state 113

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 81
    declaration                go to state 82
    type_specifier             go to state 8
    statement                  go to state 83
    compound_statement         go to state 84
    block_item                 go to state 114
    expression_statement       go to state 87
    iteration_statement        go to state 88
    selection_statement        go to state 89


State 86

   61 block_item_list: block_item .

    $default  reduce using rule 61 (block_item_list)


State 87

   57 statement: expression_statement .

    $default  reduce using rule 57 (statement)


State 88

   58 statement: iteration_statement .

    $default  reduce using rule 58 (statement)


State 89

   59 statement: selection_statement .

    $default  reduce using rule 59 (statement)


State 90

   12 primary_expression: '(' expression ')' .

    $default  reduce using rule 12 (primary_expression)


State 91

   45 expression: expression ',' . assignment_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 115


State 92

   14 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 14 (postfix_expression)


State 93

   15 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 15 (postfix_expression)


State 94

   42 assignment_expression: unary_expression ADD_ASSIGN assignment_expression .

    $default  reduce using rule 42 (assignment_expression)


State 95

   43 assignment_expression: unary_expression SUB_ASSIGN assignment_expression .

    $default  reduce using rule 43 (assignment_expression)


State 96

   41 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 41 (assignment_expression)


State 97

   24 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 24 (multiplicative_expression)


State 98

   25 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 25 (multiplicative_expression)


State 99

   26 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 26 (multiplicative_expression)


State 100

   23 multiplicative_expression: unary_expression .

    $default  reduce using rule 23 (multiplicative_expression)


State 101

   24 multiplicative_expression: multiplicative_expression . '*' unary_expression
   25                          | multiplicative_expression . '/' unary_expression
   26                          | multiplicative_expression . '%' unary_expression
   28 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 28 (additive_expression)


State 102

   24 multiplicative_expression: multiplicative_expression . '*' unary_expression
   25                          | multiplicative_expression . '/' unary_expression
   26                          | multiplicative_expression . '%' unary_expression
   29 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 66
    '/'  shift, and go to state 67
    '%'  shift, and go to state 68

    $default  reduce using rule 29 (additive_expression)


State 103

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   33 relational_expression: relational_expression LE_OP additive_expression .

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70

    $default  reduce using rule 33 (relational_expression)


State 104

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   34 relational_expression: relational_expression GE_OP additive_expression .

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70

    $default  reduce using rule 34 (relational_expression)


State 105

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   31 relational_expression: relational_expression '<' additive_expression .

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70

    $default  reduce using rule 31 (relational_expression)


State 106

   28 additive_expression: additive_expression . '+' multiplicative_expression
   29                    | additive_expression . '-' multiplicative_expression
   32 relational_expression: relational_expression '>' additive_expression .

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70

    $default  reduce using rule 32 (relational_expression)


State 107

   31 relational_expression: relational_expression . '<' additive_expression
   32                      | relational_expression . '>' additive_expression
   33                      | relational_expression . LE_OP additive_expression
   34                      | relational_expression . GE_OP additive_expression
   36 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 71
    GE_OP  shift, and go to state 72
    '<'    shift, and go to state 73
    '>'    shift, and go to state 74

    $default  reduce using rule 36 (equality_expression)


State 108

   31 relational_expression: relational_expression . '<' additive_expression
   32                      | relational_expression . '>' additive_expression
   33                      | relational_expression . LE_OP additive_expression
   34                      | relational_expression . GE_OP additive_expression
   37 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 71
    GE_OP  shift, and go to state 72
    '<'    shift, and go to state 73
    '>'    shift, and go to state 74

    $default  reduce using rule 37 (equality_expression)


State 109

   39 conditional_expression: equality_expression '?' expression . ':' conditional_expression
   45 expression: expression . ',' assignment_expression

    ':'  shift, and go to state 116
    ','  shift, and go to state 91


State 110

   66 iteration_statement: FOR '(' . expression_statement expression_statement expression ')' statement
   67                    | FOR '(' . declaration expression_statement expression ')' statement

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    CHAR             shift, and go to state 2
    INT              shift, and go to state 78
    FLOAT            shift, and go to state 4
    VOID             shift, and go to state 5
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 81
    declaration                go to state 117
    type_specifier             go to state 8
    expression_statement       go to state 118


State 111

   68 selection_statement: SWITCH '(' . expression ')' '{' case_statement_list '}'

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 119


State 112

   65 expression_statement: expression ';' .

    $default  reduce using rule 65 (expression_statement)


State 113

   60 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 60 (compound_statement)


State 114

   62 block_item_list: block_item_list block_item .

    $default  reduce using rule 62 (block_item_list)


State 115

   45 expression: expression ',' assignment_expression .

    $default  reduce using rule 45 (expression)


State 116

   39 conditional_expression: equality_expression '?' expression ':' . conditional_expression

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 100
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 120


State 117

   67 iteration_statement: FOR '(' declaration . expression_statement expression ')' statement

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 81
    expression_statement       go to state 121


State 118

   66 iteration_statement: FOR '(' expression_statement . expression_statement expression ')' statement

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 81
    expression_statement       go to state 122


State 119

   45 expression: expression . ',' assignment_expression
   68 selection_statement: SWITCH '(' expression . ')' '{' case_statement_list '}'

    ')'  shift, and go to state 123
    ','  shift, and go to state 91


State 120

   39 conditional_expression: equality_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 39 (conditional_expression)


State 121

   67 iteration_statement: FOR '(' declaration expression_statement . expression ')' statement

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 124


State 122

   66 iteration_statement: FOR '(' expression_statement expression_statement . expression ')' statement

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 125


State 123

   68 selection_statement: SWITCH '(' expression ')' . '{' case_statement_list '}'

    '{'  shift, and go to state 126


State 124

   45 expression: expression . ',' assignment_expression
   67 iteration_statement: FOR '(' declaration expression_statement expression . ')' statement

    ')'  shift, and go to state 127
    ','  shift, and go to state 91


State 125

   45 expression: expression . ',' assignment_expression
   66 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ')'  shift, and go to state 128
    ','  shift, and go to state 91


State 126

   68 selection_statement: SWITCH '(' expression ')' '{' . case_statement_list '}'

    DEFAULT  shift, and go to state 129
    BREAK    shift, and go to state 130
    CASE     shift, and go to state 131

    case_statement_list  go to state 132
    case_statement       go to state 133
    break_statement      go to state 134
    default_line         go to state 135


State 127

   67 iteration_statement: FOR '(' declaration expression_statement expression ')' . statement

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    FOR              shift, and go to state 79
    SWITCH           shift, and go to state 80
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39
    '{'              shift, and go to state 51

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 81
    statement                  go to state 136
    compound_statement         go to state 84
    expression_statement       go to state 87
    iteration_statement        go to state 88
    selection_statement        go to state 89


State 128

   66 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    FOR              shift, and go to state 79
    SWITCH           shift, and go to state 80
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39
    '{'              shift, and go to state 51

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 81
    statement                  go to state 137
    compound_statement         go to state 84
    expression_statement       go to state 87
    iteration_statement        go to state 88
    selection_statement        go to state 89


State 129

   77 default_line: DEFAULT . ':' block_item_list

    ':'  shift, and go to state 138


State 130

   76 break_statement: BREAK . ';'

    ';'  shift, and go to state 139


State 131

   74 case_statement: CASE . constant_expression ':' block_item_list
   75               | CASE . constant_expression ':' break_statement

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 100
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 140
    constant_expression        go to state 141


State 132

   68 selection_statement: SWITCH '(' expression ')' '{' case_statement_list . '}'

    '}'  shift, and go to state 142


State 133

   69 case_statement_list: case_statement .
   70                    | case_statement . break_statement case_statement_list
   71                    | case_statement . case_statement_list

    DEFAULT  shift, and go to state 129
    BREAK    shift, and go to state 130
    CASE     shift, and go to state 131

    $default  reduce using rule 69 (case_statement_list)

    case_statement_list  go to state 143
    case_statement       go to state 133
    break_statement      go to state 144
    default_line         go to state 135


State 134

   73 case_statement_list: break_statement .

    $default  reduce using rule 73 (case_statement_list)


State 135

   72 case_statement_list: default_line .

    $default  reduce using rule 72 (case_statement_list)


State 136

   67 iteration_statement: FOR '(' declaration expression_statement expression ')' statement .

    $default  reduce using rule 67 (iteration_statement)


State 137

   66 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 66 (iteration_statement)


State 138

   77 default_line: DEFAULT ':' . block_item_list

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    CHAR             shift, and go to state 2
    INT              shift, and go to state 78
    FLOAT            shift, and go to state 4
    VOID             shift, and go to state 5
    FOR              shift, and go to state 79
    SWITCH           shift, and go to state 80
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39
    '{'              shift, and go to state 51

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 81
    declaration                go to state 82
    type_specifier             go to state 8
    statement                  go to state 83
    compound_statement         go to state 84
    block_item_list            go to state 145
    block_item                 go to state 86
    expression_statement       go to state 87
    iteration_statement        go to state 88
    selection_statement        go to state 89


State 139

   76 break_statement: BREAK ';' .

    $default  reduce using rule 76 (break_statement)


State 140

   46 constant_expression: conditional_expression .

    $default  reduce using rule 46 (constant_expression)


State 141

   74 case_statement: CASE constant_expression . ':' block_item_list
   75               | CASE constant_expression . ':' break_statement

    ':'  shift, and go to state 146


State 142

   68 selection_statement: SWITCH '(' expression ')' '{' case_statement_list '}' .

    $default  reduce using rule 68 (selection_statement)


State 143

   71 case_statement_list: case_statement case_statement_list .

    $default  reduce using rule 71 (case_statement_list)


State 144

   70 case_statement_list: case_statement break_statement . case_statement_list
   73                    | break_statement .

    DEFAULT  shift, and go to state 129
    BREAK    shift, and go to state 130
    CASE     shift, and go to state 131

    $default  reduce using rule 73 (case_statement_list)

    case_statement_list  go to state 147
    case_statement       go to state 133
    break_statement      go to state 134
    default_line         go to state 135


State 145

   62 block_item_list: block_item_list . block_item
   77 default_line: DEFAULT ':' block_item_list .

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    CHAR             shift, and go to state 2
    INT              shift, and go to state 78
    FLOAT            shift, and go to state 4
    VOID             shift, and go to state 5
    FOR              shift, and go to state 79
    SWITCH           shift, and go to state 80
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39
    '{'              shift, and go to state 51

    $default  reduce using rule 77 (default_line)

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 81
    declaration                go to state 82
    type_specifier             go to state 8
    statement                  go to state 83
    compound_statement         go to state 84
    block_item                 go to state 114
    expression_statement       go to state 87
    iteration_statement        go to state 88
    selection_statement        go to state 89


State 146

   74 case_statement: CASE constant_expression ':' . block_item_list
   75               | CASE constant_expression ':' . break_statement

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    CHAR             shift, and go to state 2
    INT              shift, and go to state 78
    FLOAT            shift, and go to state 4
    VOID             shift, and go to state 5
    FOR              shift, and go to state 79
    SWITCH           shift, and go to state 80
    BREAK            shift, and go to state 130
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39
    '{'              shift, and go to state 51

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 81
    declaration                go to state 82
    type_specifier             go to state 8
    statement                  go to state 83
    compound_statement         go to state 84
    block_item_list            go to state 148
    block_item                 go to state 86
    expression_statement       go to state 87
    iteration_statement        go to state 88
    selection_statement        go to state 89
    break_statement            go to state 149


State 147

   70 case_statement_list: case_statement break_statement case_statement_list .

    $default  reduce using rule 70 (case_statement_list)


State 148

   62 block_item_list: block_item_list . block_item
   74 case_statement: CASE constant_expression ':' block_item_list .

    IDENTIFIER       shift, and go to state 31
    INTEGER_LITERAL  shift, and go to state 32
    FLOAT_LITERAL    shift, and go to state 33
    STRING_LITERAL   shift, and go to state 34
    INC_OP           shift, and go to state 35
    DEC_OP           shift, and go to state 36
    CHAR             shift, and go to state 2
    INT              shift, and go to state 78
    FLOAT            shift, and go to state 4
    VOID             shift, and go to state 5
    FOR              shift, and go to state 79
    SWITCH           shift, and go to state 80
    '('              shift, and go to state 37
    '+'              shift, and go to state 38
    '-'              shift, and go to state 39
    '{'              shift, and go to state 51

    $default  reduce using rule 74 (case_statement)

    primary_expression         go to state 40
    postfix_expression         go to state 41
    unary_expression           go to state 42
    multiplicative_expression  go to state 43
    additive_expression        go to state 44
    relational_expression      go to state 45
    equality_expression        go to state 46
    conditional_expression     go to state 47
    assignment_expression      go to state 55
    expression                 go to state 81
    declaration                go to state 82
    type_specifier             go to state 8
    statement                  go to state 83
    compound_statement         go to state 84
    block_item                 go to state 114
    expression_statement       go to state 87
    iteration_statement        go to state 88
    selection_statement        go to state 89


State 149

   75 case_statement: CASE constant_expression ':' break_statement .

    $default  reduce using rule 75 (case_statement)
